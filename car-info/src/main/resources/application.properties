
#H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2
spring.datasource.hikari.jdbc-url=jdbc:h2:~/test
spring.datasource.username=sa
spring.datasource.password=
spring.datasource.initialization-mode=always

#JPA
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# WebApplication 실행시(hibernate의 SessionFactory) DB 스키마에 어떤 행위를 할 것인가에 대한 옵션 
# create - 존재하는 테이블 모두 지우고 다시 생성 
# create-drop - create와 동일 하지만 SessionFactory 내려가면 테이블 Drop
# update - 변경이 필요한 경우 alter로 변경, 없는 경우 create
# validate - update와 비슷 하지만 Object 와 스키마 정보가 다르면 에러 Return 
spring.jpa.hibernate.ddl-auto=validate
# Hibernate 가 DB에 날리는 모든 쿼리를 보여줌 
spring.jpa.show-sql=true
# 주석도 같이 보여줌 
spring.jpa.properties.hibernate.use_sql_comments=true
# 보여지는 쿼리를 포맷팅 
spring.jpa.properties.hibernate.format_sql=true
# 쿼리파라미터의 값을 표시 해줌 
logging.level.org.hibernate.type.descriptor.sql=trace

# 정리 
# 정적 리소스 변경사항 자동 반영 spring-boot-devtools 필요 
# 다른 소스파일 변경시 자동 재시작 
spring.devtools.livereload.enabled=true
# JAVA Templete Engine Cache Disable (안하면 변경사항 로드 안됨)
spring.thymeleaf.cache=false


#actuator
management.endpoints.web.exposure.include=*
management.endpoint.shutdown.enabled=true
management.metrics.distribution.percentiles.http.server.requests= 0.1, 0.5, 0.99

# management.endpoints.web.exposure.exclude=env,beans