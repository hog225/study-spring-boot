plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
    id "org.flywaydb.flyway" version "7.9.1"
}

group = 'org.yg.practice'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.h2database:h2'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok' // annotationProcessor 자동으로 생성되는 코드를 Build 시 성능면에서(Compiler가 코드 전체를 다 봐야 함으로 ) 불리한데 이를 개선해 주는것 
    implementation 'org.mariadb.jdbc:mariadb-java-client' //version 주의 version을 설정할 경우 자바 버전에 따라 JDBC 클레스를 찾을 수 없다는 에러가 발생하기도 한다. 
    implementation "org.flywaydb:flyway-core:7.9.1"
}

test {
	useJUnitPlatform()
}

// database 1개 
flyway {
    url = 'jdbc:mariadb://localhost:3306/flyway_test'
    user = 'root'
    password = 'root'
    locations = ['classpath:db/migration']

}

// database 2개 이상

// task migrateDatabase1(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
//     url = 'jdbc:mariadb://localhost:3306/flyway'
//     user = 'root'
//     password = 'root'
//     locations = ['classpath:db/migration']
// }

// task migrateDatabase2(type: org.flywaydb.gradle.task.FlywayMigrateTask) {
//     url = 'jdbc:mariadb://localhost:3306/flyway_test'
//     user = 'root'
//     password = 'root'
//     locations = ['classpath:db/migration']
// }



